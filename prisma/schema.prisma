// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  role Role @default(WORKER)
  name String
  password String
  lastName String?
  email String @unique
  phoneNumber String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobs Job[] @relation(name: "creator")
  jobOffers JobOffer[]
  jobsDone Job[] @relation("job_done")

  currentlyWorkingOn Job? @relation(fields: [currentlyWorkingOnJobId], references: [id]) 
  currentlyWorkingOnJobId Int? @unique

  @@map("users")

}

enum Role {
  WORKER
  ADMIN
}

model Job {
  id Int @id @default(autoincrement())
  name String
  description String
  category JobType
  createdAt DateTime @default(now())
  date DateTime
  price Float 
  priceType PriceType @default(WHOLE)
  currency Currency @default(RSD)
  amount Float
  location String
  status JobStatus @default(ACTIVE)
  withoutMonitoring Boolean @default(false)

  userId Int
  user User @relation(fields: [userId], references: [id], name: "creator")

  userThatDidTheJobId Int?
  userThatDidTheJob User? @relation(fields: [userThatDidTheJobId], references: [id], name: "job_done")

  currentlyWorkingOnUser User?

  jobOffers JobOffer[]

  hasAcceptedOffer Boolean? @default(false)
  acceptedOfferId Int?

  

  @@map("jobs")
}


model JobOffer{
  id Int @id @default(autoincrement())
  description String
  price Float 
  priceType PriceType @default(WHOLE)
  currency Currency @default(RSD)

  userId Int
  user   User @relation(fields: [userId], references: [id])

  jobId Int
  job   Job @relation(fields: [jobId], references: [id])
}

enum Currency{
  RSD
  EUR
  USD
  CHF
}

enum JobStatus{
  ACTIVE
  IN_PROGRESS
  DONE
  ABORTED
}

enum PriceType{
  WHOLE
  PER_HOUR
  PER_M2
  PER_DAY
}



enum JobType {
  ELECTRICS
  PLUMBING
  PAINTING
  GARDENING
  CLEANING
}

